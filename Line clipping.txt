#include<stdio.h>
#include<GL/glut.h>
#include<stdbool.h>
double xmin=50,ymin=50,xmax=100,ymax=100;
double xvmin=200,yvmin=200,xvmax=300,yvmax=300;
double xmat[6][2],ymat[6][2];
const int TOP=8,BOTTOM=4,RIGHT=2,LEFT=1;
//int n;
//printf("Enter the no of the lines:\n");
//scanf("%d",&n);
int computeoutcode(double x,double y)
{
    int code=0;
    if(y>ymax)
        code|=TOP;
    else if (y<ymin)
        code|=BOTTOM;
    if(x>xmax)
        code|=RIGHT;
    else if (x<xmin)
        code|=LEFT;
    return code;
}
void draw_text(float x,float y,char *s)
{
    int i=0;
    glRasterPos2f(x,y);
    for(i=0;s[i]!='\0';i++)
        glutBitmapCharacter(GLUT_BITMAP_HELVETICA_18,s[i]);
}
void cohensutherland(double x0,double y0,double x1,double y1)
{
    int outcode0,outcode1,outcodeout;
    bool accept=false,done=false;
    outcode0=computeoutcode(x0,y0);
    outcode1=computeoutcode(x1,y1);
    do
    {
        if((outcode0|outcode1)==0)
        {
            accept=true;
            done=true;
        }
        else if(outcode0&outcode1)
            done=true;
        else
        {
            double x,y;
            outcodeout=outcode0?outcode0:outcode1;
            float slope=(y1-y0)/(x1-x0);
            if(outcodeout&TOP)
            {
                x=x0+(1/slope)*(ymax-y0);
                y=ymax;
            }
            else if(outcodeout&BOTTOM)
            {
                x=x0+(1/slope)*(ymin-y0);
                y=ymin;
            }
            else if(outcodeout&RIGHT)
            {
                y=y0+slope*(xmax-x0);
                x=xmax;
            }
            else
            {
                y=y0+slope*(xmin-x0);
                x=xmin;
            }
            if(outcodeout==outcode0)
            {
                x0=x;
                y0=y;
                outcode0=computeoutcode(x0,y0);
            }
            else
            {
                x1=x;
                y1=y;
                outcode1=computeoutcode(x1,y1);
            }
        }
    }while(!done);
    if(accept)
    {
        double sx=(xvmax-xvmin)/(xmax-xmin);
        double sy=(yvmax-yvmin)/(ymax-ymin);
        double vx0=xvmin+(x0-xmin)*sx;
        double vy0=yvmin+(y0-ymin)*sy;
        double vx1=xvmin+(x1-xmin)*sx;
        double vy1=yvmin+(y1-ymin)*sy;
        glColor3f(0.0,0.0,1.0);
        glBegin(GL_LINES);
        glVertex2f(vx0,vy0);
        glVertex2f(vx1,vy1);
        glEnd();
    }
}
void display()
{
    //double x0=60,y0=60,x1=120,y1=120;
    int i;
    glClear(GL_COLOR_BUFFER_BIT);
    draw_text(50,450,"Cohen-Sutherland Line Clipping");
    draw_text(50,430,"Anshu Priya");
    draw_text(50,410,"1BI15CS25");
    draw_text(50,390,"Batch:A2");
    //draw_text(50,370,"Line is a clipping candidate");
    for(i=0;i<3;i++)
    {
        glColor3f(1.0,0.0,0.0);
        glBegin(GL_LINES);
        glVertex2f(xmat[i][0],ymat[i][0]);
        glVertex2f(xmat[i][1],ymat[i][1]);
        glEnd();
    }
    glColor3f(0.0,0.0,1.0);
    glBegin(GL_LINE_LOOP);
    glVertex2f(xmin,ymin);
    glVertex2f(xmax,ymin);
    glVertex2f(xmax,ymax);
    glVertex2f(xmin,ymax);
    glEnd();
    glColor3f(1.0,0.0,0.0);
    glBegin(GL_LINE_LOOP);
    glVertex2f(xvmin,yvmin);
    glVertex2f(xvmax,yvmin);
    glVertex2f(xvmax,yvmax);
    glVertex2f(xvmin,yvmax);
    glEnd();
    for(i=0;i<3;i++)
        cohensutherland(xmat[i][0],ymat[i][0],xmat[i][1],ymat[i][1]);
    glFlush();
}
void myinit()
{
    glClearColor(1.0,1.0,1.0,1.0);
    glColor3f(1.0,0.0,0.0);
    glPointSize(1.0);
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    gluOrtho2D(0,500,0,500);
}
int main(int argc,char **argv)
{
    int i;
    printf("Enter the end points of the lines\n");
    for(i=0;i<3;i++)
    {
        printf("For line %d:",i+1);
        scanf("%lf%lf%lf%lf",&xmat[i][0],&ymat[i][0],&xmat[i][1],&ymat[i][1]);
    }
    glutInit(&argc,argv);
    glutInitDisplayMode(GLUT_SINGLE|GLUT_RGB);
    glutCreateWindow("Cohen Sutherland Line Clipping");
    glutInitWindowSize(1000,1000);
    glutInitWindowPosition(0,0);
    glutDisplayFunc(display);
    myinit();
    glutMainLoop();
}


